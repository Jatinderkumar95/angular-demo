{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ReactiveCreateEmployeeComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(g_r2);\n  }\n}\nfunction ReactiveCreateEmployeeComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 17);\n    i0.ɵɵtext(2, \"\\nrequired \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Fill Name Field \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !ctx_r1.name.errors);\n  }\n}\nexport class ReactiveCreateEmployeeComponent {\n  constructor(http) {\n    this.gender = ['abc', 'xyz'];\n    this.employeeForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(10)]),\n      gender: new FormControl('', [Validators.required]),\n      //  new FormControl({value: 'Rahul', disabled: true}),\n      preference: new FormControl(),\n      // birthDate: new FormControl(),\n      // department: new FormControl(),\n      // image: new FormControl(),\n      // phn: new FormControl(),\n      // email: new FormControl(),\n      address: new FormGroup({\n        line1: new FormControl(),\n        zip: new FormControl()\n      })\n      // formArray : new FormArray({\n      // })\n    });\n\n    this.http = http;\n  }\n  ngOnInit() {\n    this.populateGender();\n  }\n  onSubmit() {\n    console.log(this.employeeForm);\n  }\n  populateGender() {\n    this.http.get('https://jsonplaceholder.typicode.com/todos/1').pipe(map(res => res.title)).subscribe({\n      next: res => {\n        this.gender.push(res);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  get name() {\n    return this.employeeForm.get('name');\n  }\n  static #_ = this.ɵfac = function ReactiveCreateEmployeeComponent_Factory(t) {\n    return new (t || ReactiveCreateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReactiveCreateEmployeeComponent,\n    selectors: [[\"app-reactive-create-employee\"]],\n    decls: 30,\n    vars: 4,\n    consts: [[\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"name\", \"gender\", \"formControlName\", \"gender\"], [\"value\", \"g\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"preference\"], [\"type\", \"radio\", \"id\", \"preference\", \"name\", \"preference\", \"value\", \"email\", \"formControlName\", \"preference\"], [\"type\", \"radio\", \"id\", \"preference\", \"formControlName\", \"preference\", \"name\", \"preference\", \"value\", \"phone\"], [\"formGroupName\", \"address\"], [\"for\", \"line1\"], [\"type\", \"text\", \"id\", \"line1\", \"name\", \"line1\", \"formControlName\", \"line1\"], [\"for\", \"zip\"], [\"type\", \"number\", \"id\", \"zip\", \"name\", \"zip\", \"formControlName\", \"zip\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngIf\"], [\"value\", \"g\"], [3, \"hidden\"]],\n    template: function ReactiveCreateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ReactiveCreateEmployeeComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"p\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\")(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Gender\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 4);\n        i0.ɵɵtemplate(9, ReactiveCreateEmployeeComponent_option_9_Template, 2, 1, \"option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"p\")(11, \"label\", 6);\n        i0.ɵɵtext(12, \"preference : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵtext(14, \"email \");\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵtext(16, \"phone \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 9)(18, \"p\")(19, \"label\", 10);\n        i0.ɵɵtext(20, \"line1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\")(23, \"label\", 12);\n        i0.ɵɵtext(24, \"zip\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"p\")(27, \"button\", 14);\n        i0.ɵɵtext(28, \"Submit \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(29, ReactiveCreateEmployeeComponent_div_29_Template, 4, 1, \"div\", 15);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gender);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"disabled\", !ctx.employeeForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.name && (ctx.name.dirty || ctx.name.touched));\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","g_r2","ɵɵproperty","ctx_r1","name","errors","ReactiveCreateEmployeeComponent","constructor","http","gender","employeeForm","required","minLength","preference","address","line1","zip","ngOnInit","populateGender","onSubmit","console","log","get","pipe","res","title","subscribe","next","push","error","err","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","ReactiveCreateEmployeeComponent_Template","rf","ctx","ɵɵlistener","ReactiveCreateEmployeeComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","ReactiveCreateEmployeeComponent_option_9_Template","ReactiveCreateEmployeeComponent_div_29_Template","valid","dirty","touched"],"sources":["/home/Jatinderkumar95/angular-demo/src/app/employees/reactive-create-employee.component.ts","/home/Jatinderkumar95/angular-demo/src/app/employees/reactive-create-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../models/employee.model';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { map, pipe } from 'rxjs';\n\n@Component({\n  selector: 'app-reactive-create-employee',\n  templateUrl: './reactive-create-employee.component.html',\n  styleUrls: ['./reactive-create-employee.component.css']\n})\nexport class ReactiveCreateEmployeeComponent implements OnInit {\n\n  private http: HttpClient;\n\n\n\n  gender: string[] = ['abc', 'xyz'];\n  employee!: Employee;\n\n  employeeForm: FormGroup = new FormGroup({\n    name: new FormControl('',[Validators.required,Validators.minLength(10)]),\n    gender: new FormControl('',[Validators.required]), \n    //  new FormControl({value: 'Rahul', disabled: true}),\n    preference: new FormControl(),\n    // birthDate: new FormControl(),\n    // department: new FormControl(),\n    // image: new FormControl(),\n    // phn: new FormControl(),\n    // email: new FormControl(),\n    address: new FormGroup({\n      line1: new FormControl(),\n      zip: new FormControl()\n    }),\n    // formArray : new FormArray({\n\n    // })\n  });\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n\n  ngOnInit(): void {\n    this.populateGender();\n  }\n\n  onSubmit(): void {\n    console.log(this.employeeForm);\n  }\n  populateGender(): void {\n    this.http.get('https://jsonplaceholder.typicode.com/todos/1').pipe(map(\n      (res: any) => res.title\n    )).subscribe({\n      next: (res) => {\n        this.gender.push(res);\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n\n  get name() {\nreturn this.employeeForm.get('name');\n  }\n}\n\n","<form [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n  <p>\n    <label for=\"name\">Name</label>\n    <input type=\"text\" id=\"name\" name=\"name\" formControlName=\"name\">\n  </p>\n\n  <p>\n    <label for=\"gender\">Gender</label>\n    <select id=\"gender\" name=\"gender\" formControlName=\"gender\">\n    <option *ngFor=\"let g of gender\" value=\"g\">{{g}}</option>\n    </select>\n  </p>\n\n  <p>\n    <label for=\"preference\">preference : </label>\n    <input type=\"radio\" id=\"preference\" name=\"preference\" value=\"email\" formControlName=\"preference\">email \n    <input type=\"radio\" id=\"preference\" formControlName=\"preference\" name=\"preference\" value=\"phone\">phone\n  </p>\n\n  <div formGroupName=\"address\">\n    <p>\n      <label for=\"line1\">line1</label>\n      <input type=\"text\" id=\"line1\" name=\"line1\" formControlName=\"line1\">\n    </p>\n\n    <p>\n      <label for=\"zip\">zip</label>\n      <input type=\"number\" id=\"zip\" name=\"zip\" formControlName=\"zip\">\n    </p>\n  </div>\n  <p>\n    <button type=\"submit\" [disabled]=\"!employeeForm.valid\">Submit </button>\n  </p>\n\n\n</form>\n\n<div *ngIf=\"name && (name.dirty || name.touched)\">\n  <div [hidden]=\"!name.errors\">\nrequired\n  </div>\n  Fill Name Field \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}